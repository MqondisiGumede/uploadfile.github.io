{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onclick","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab90a6a7.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore{\r\n    constructor() {\r\n        extendObservable(this,{loading: true,isLoggedIn: false, username: ''})\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"inputField\">              \r\n                <input \r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={ (e) => this.props.onChange(e.target.value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"submitButton\">\r\n                <button className='btn' disabled={this.props.disabled} onclick={ () => this.props.onClick()}>\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField   from './InputField';\r\nimport SubmitButton   from './SubmitButton';\r\nimport UserStore      from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {username: '', password: '', buttonDisabled: false}\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12)\r\n        {\r\n            return;\r\n        }\r\n        this.setState({[property]: val})\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n\r\n        if(!this.state.username) {\r\n            return;\r\n        }\r\n        if(!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {method: 'post', headers: {'Accept':'application/json','Content-Type': 'application/json'},\r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n            });\r\n\r\n                let result = await res.json();\r\n                if(result && result.success){\r\n                    UserStore.isLoggedIn = true;\r\n                    UserStore.username = result.username;\r\n                }\r\n                else if (result && result.success === false){\r\n                    this.resetForm();\r\n                    alert(result.msg);\r\n                }\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"loginForm\">\r\n                \r\n                Log in\r\n                <InputField type='text' placeholder='Username' value={this.state.username ? this.state.username: ''} onChange={(val) => this.setInputValue('username', val) }\r\n                />\r\n\r\n                <InputField type='text' placeholder='Password' value={this.state.password ? this.state.password: ''} onChange={(val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n                <SubmitButton text='Login' disabled={this.state.buttonDisabled} onClick={ () => this.doLogin() } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React          from 'react';\nimport { observer }    from 'mobx-react';\nimport UserStore      from './stores/UserStore';\nimport LoginForm      from './LoginForm';\nimport SubmitButton   from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try {\n\n        let res = await fetch('/isLoggedIn', {method: 'post',headers: {'Accept':'application/json','Content-Type':'application/json'}});\n        let result = await res.json();\n        if(result && result.success)\n        {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = true;\n          UserStore.username = result.username;\n        }\n        else\n        {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = false;\n        }\n    }\n    catch(e)\n    {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n\n    try {\n\n        let res = await fetch('/logout', {method: 'post',headers: {'Accept':'application/json','Content-Type':'application/json'}});\n        let result = await res.json();\n        if(result && result.success)\n        {\n          UserStore.isLoggedIn = false;\n          UserStore.username = '';\n        }\n    }\n    catch(e)\n    {\n        console.log(e);\n    }\n  }\n\n\n  render() {\n\n    if(UserStore.loading){\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait....\n          </div>\n        </div>\n      );\n    }\n    else{\n      if(UserStore.isLoggedIn){\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Welcome {UserStore.username}\n\n            <SubmitButton \n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n            />\n\n          </div>\n        </div>\n      );\n    }\n\n    }\n\n    return (\n      <div className=\"app\">\n        <div className='container'>\n          <LoginForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}